using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Consuming3rdPartyAPI.POCOs;
//
//    var newQuoteResponse = NewQuoteResponse.FromJson(jsonString);

namespace Consuming3rdPartyAPI.POCOs
{


    public partial class NewQuoteResponse
    {
        [JsonProperty("listOfResponses")]
        public List<string> ListOfResponses { get; set; }

        [JsonProperty("dateTimeOfResponse")]
        public DateTimeOffset DateTimeOfResponse { get; set; }

        [JsonProperty("operationSuccessful")]
        public bool OperationSuccessful { get; set; }

        [JsonProperty("detailsAboutOperation")]
        public string DetailsAboutOperation { get; set; }

        [JsonProperty("quoteIdentifierString")]
        public string QuoteIdentifierString { get; set; }
    }

    public partial class NewQuoteResponse
    {
        public static NewQuoteResponse FromJson(string json) => JsonConvert.DeserializeObject<NewQuoteResponse>(json, Converter.Settings);
    }

    //public static class Serialize
    //{
    //    public static string ToJson(this NewQuoteResponse self) => JsonConvert.SerializeObject(self, Consuming3rdPartyAPI.POCOs.Converter.Settings);
    //}

    //internal static class Converter
    //{
    //    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}
}

